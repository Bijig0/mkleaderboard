[{"C:\\Users\\brady\\mkleaderboard\\src\\index.js":"1","C:\\Users\\brady\\mkleaderboard\\src\\reportWebVitals.js":"2","C:\\Users\\brady\\mkleaderboard\\src\\fetch.js":"3","C:\\Users\\brady\\mkleaderboard\\src\\parse.js":"4","C:\\Users\\brady\\mkleaderboard\\src\\pagination.js":"5","C:\\Users\\brady\\mkleaderboard\\src\\Components\\Navbar.js":"6","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\App.js":"7","C:\\Users\\brady\\mkleaderboard\\src\\data\\data.js":"8","C:\\Users\\brady\\mkleaderboard\\src\\urlGet.js":"9","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\AllCountries.js":"10","C:\\Users\\brady\\mkleaderboard\\src\\Components\\ListOfTourneyNavbar.js":"11","C:\\Users\\brady\\mkleaderboard\\src\\TourneyNames.js":"12","C:\\Users\\brady\\mkleaderboard\\src\\Components\\SearchFilter.js":"13"},{"size":1500,"mtime":1610875714782,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":846,"mtime":1610634204717,"results":"17","hashOfConfig":"15"},{"size":1427,"mtime":1610620926799,"results":"18","hashOfConfig":"15"},{"size":830,"mtime":1610806443123,"results":"19","hashOfConfig":"15"},{"size":5520,"mtime":1610875682229,"results":"20","hashOfConfig":"15"},{"size":3773,"mtime":1610867655266,"results":"21","hashOfConfig":"15"},{"size":10004,"mtime":1610781840721,"results":"22","hashOfConfig":"15"},{"size":707,"mtime":1610794239479,"results":"23","hashOfConfig":"15"},{"size":1427,"mtime":1610802805292,"results":"24","hashOfConfig":"15"},{"size":384,"mtime":1610869634237,"results":"25","hashOfConfig":"15"},{"size":676,"mtime":1610845940988,"results":"26","hashOfConfig":"15"},{"size":501,"mtime":1610869557880,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1yzpjz6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\brady\\mkleaderboard\\src\\index.js",["62","63"],"C:\\Users\\brady\\mkleaderboard\\src\\reportWebVitals.js",[],["64","65"],"C:\\Users\\brady\\mkleaderboard\\src\\fetch.js",["66"],"// const arr = [ { 'name': 'P1', 'value': 150 }, { 'name': 'P1', 'value': 150 }, { 'name': 'P2', 'value': 200 }, { 'name': 'P3', 'value': 450 } ];\r\n\r\n// const res = Array.from(arr.reduce(\r\n//   (m, {user.nickname, value}) => m.set(user.nickname, (m.get(user.nickname) || 0) + value), new Map\r\n// ), ([user.nickname, value]) => ({user.nickname, value}));\r\n// console.log(res);\r\n\r\n\r\nimport {useState,useEffect} from 'react'\r\n\r\nconst useFetch = (url) => {\r\n    const [users,setUsers] = useState([])\r\n\r\n  const getUsers = async (url) => {\r\n      const response = await fetch(url)\r\n      console.log(response);\r\n      const parsed = await response.json()\r\n      const ranking = await parsed.ranking\r\n      setUsers(ranking)\r\n            \r\n   \r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers(url)\r\n  }, [])\r\n  return users\r\n}\r\n\r\nexport default useFetch\r\n\r\n","C:\\Users\\brady\\mkleaderboard\\src\\parse.js",["67","68","69","70","71","72","73"],"import {useEffect, useState} from 'react'\r\n\r\nconst useParse = (label) => {\r\n  const [correctPosition,setCorrectPosition] = useState(\"\")\r\n  const [value,setValue] = useState(0)\r\n\r\n  const labelValue = () => {\r\n    switch (correctPosition) {\r\n      case 1:\r\n        setValue(value + 350)\r\n        break;\r\n      case 2:\r\n        setValue(value + 260)\r\n        break;\r\n      case 3:\r\n        setValue(value + 230)\r\n        break;\r\n      case 4:\r\n        setValue(value + 200)\r\n        break;\r\n      case 5:\r\n        setValue(value + 140)\r\n        break;\r\n      case 7:\r\n        setValue(value + 70)\r\n        break;\r\n      case 9:\r\n        setValue(value + 40)\r\n        break;\r\n      case 13:\r\n        setValue(value + 20)\r\n        break;\r\n      case 17:\r\n        setValue(value + 10)\r\n        break;\r\n      case 25:\r\n        setValue(value + 5)\r\n        break;\r\n    }\r\n  }\r\n  const removeLabel = () => {\r\n    if (label.charAt(1) == '.' || label.charAt(1) == '-') {\r\n      setCorrectPosition(parseInt(label.charAt(0)))\r\n    }\r\n    else if (label.charAt(2) == '.' || label.charAt(2) == '-') {\r\n      setCorrectPosition(parseInt(label.substring(0,2)))\r\n    }\r\n    else {\r\n      setCorrectPosition(parseInt(label.substring(0,3)))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    removeLabel()\r\n  }, [])\r\n\r\n    useEffect(() => {\r\n      labelValue()\r\n    }, [correctPosition])\r\n\r\n    return [correctPosition,value]\r\n}\r\n\r\nexport default useParse\r\n","C:\\Users\\brady\\mkleaderboard\\src\\pagination.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\Components\\Navbar.js",["74","75","76","77","78","79","80","81"],"import React from 'react'\r\nimport '../css/override.css'\r\nimport { useEffect,useState } from 'react'\r\nimport logoBanner from '../img/MK11ProKompBanner.png'\r\nimport uuid from 'react-uuid'\r\nimport Data from \"../data/data\"\r\nimport SearchFilter from './SearchFilter'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// 885px\r\n\r\nconst Banner = () => {\r\n    const [Show, setShow] = useState(false)\r\n    const [windowSize, setwindowSize] = useState(window.innerWidth)\r\n    const checkSize = () => {\r\n      setwindowSize(window.innerWidth)\r\n    }\r\n    useEffect(() => {\r\n      window.addEventListener(\"resize\",checkSize)\r\n      return () => {\r\n        window.removeEventListener(\"resize\",checkSize)\r\n      }\r\n    },[])\r\n    return (\r\n      <>\r\n      {windowSize > 892? <Navbar NavbarToShow={true}/>: <Navbar NavbarToShow={false}/>}\r\n      </>\r\n        \r\n\r\n    )}\r\n\r\n    // if more than 885 then show Navbar with RegionCardList, if less than 885 then show Navbar but with Events instead, Events will then produce Navbar with RegionCardList\r\n\r\n    const Navbar = ({NavbarToShow}) => {\r\n      const [Show, setShow] = useState(false)\r\n      return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n            <div className=\"navbar-collapse\" id=\"navbarSupportedContent\">\r\n              {NavbarToShow?\r\n              <img src={logoBanner} alt=\"MK11\" class=\"d-inline-block align-top\" height=\"50\"></img>:\r\n              <img src={logoBanner} alt=\"MK11\" class=\"d-inline-block align-top\" width=\"100%\" onClick={() => setShow(false)} ></img>\r\n            }\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                {NavbarToShow || Show ? <RegionCardList/> : \r\n                    <a onClick={() => setShow(true)} href=\"#\" className=\"nav-link dropdown-toggle\">Events</a>\r\n                }\r\n                </ul>\r\n            </div>\r\n            </div>\r\n            <SearchFilter/>\r\n        </nav>\r\n    </>\r\n      )\r\n    }\r\n\r\n    export const PosNameVal = () => {\r\n      return (\r\n        <div className=\"container-fluid bg-light d-flex justify-content-evenly\">\r\n          <h1 className=\"Header\">Position</h1>\r\n          <h1 className=\"Header push\">Name</h1>\r\n          <h1 className=\"Header\"> Points</h1>\r\n        </div>\r\n      )\r\n    }\r\n\r\nconst RegionCardList = () => {\r\n    return (\r\n        <>\r\n        {Data.map((card) => {\r\n            return <RegionalCard {...card}/>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst RegionalCard = ({ListOfCountries}) => {\r\n    return (\r\n        <>\r\n                {ListOfCountries.map((Country) => {\r\n                    return (\r\n                    <DisplayRowOfMainCountries key={uuid()} {...Country} />\r\n                )})}\r\n            </>\r\n)\r\n}\r\n\r\nconst DisplayRowOfMainCountries = ({DisplayCountry,SubcountryList}) => {\r\n    const [showCountryState,setShowCountryState] = useState(false)\r\n    const [countryName, setcountryName] = useState(\"\")\r\n    const showCountry = (event) => {\r\n        setcountryName(event.target.innerText)\r\n        setShowCountryState(!showCountryState)\r\n    }\r\n    return (\r\n        <>\r\n        <li className=\"nav-item\">\r\n        <a className=\"nav-link dropdown-toggle mx-2\" href=\"#\" onClick={showCountry}>{DisplayCountry}</a>\r\n        </li>\r\n        {/* make this shit its own component so you can make it a dropdown menu */}\r\n      \r\n        {showCountryState && SubcountryList.map((SubCountry) => {\r\n            return <Link to=\"/ME\" ><a href=\"#\" className=\"nav-link mx-2\">{SubCountry.Name}</a></Link>\r\n        }) }\r\n        {/* {showCountryState && \r\n            <ul className=\"dropdown-menu show\">\r\n                {SubcountryList.map((Subcountry) => {\r\n                    return <h1>{Subcountry.Name}</h1>\r\n                })}\r\n            \r\n            </ul>} */}\r\n        {/* Also make the lists new Array each time so no overlapping */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst DropDown = () => {\r\n\r\n}\r\n\r\n{/* <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n      <img src=\"./img/MK11ProKompBanner.png\" alt=\"\" class=\"d-inline-block align-top\" height=\"50\">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" href=\"#\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\">\r\n            Dropdown\r\n          </a>\r\n          <ul class=\"dropdown-menu\">\r\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr class=\"dropdown-divider\"></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <form class=\"d-flex\">\r\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\">\r\n        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Banner","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\App.js",["82","83","84","85","86","87"],"import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport{ useEffect,useState } from 'react'\nimport useFetch from '../fetch'\nimport useParse from '../parse'\nimport Pagination from '../pagination'\nimport GoldenDiv from '../img/goldenplaceholder (2).png'\nimport '../css/override.css'\nconst fetch = require(\"node-fetch\")\nvar TourneyUsersWithValues = []\n\n// make useFetch into regular function so you can loop through it\n\n\nexport function App({urls}) {\n  const [currentPosts,setCurrentPosts] = useState([])\n  const [currentPage, setcurrentPage] = useState(1)\n  const postsPerPage = 8\n  const [CompiledDataToBeMerged, setCompiledDataToBeMerged] = useState([])\n  const [FinalLeaderboard, setFinalLeaderboard] = useState([])\n  const users = useFetch(urls[0])\n  const secondusers = useFetch(urls[1])\n  const listofAllTourneys = [users,secondusers]\n\n\n  const lastIndexOfPage = currentPage * postsPerPage\n  const firstIndexofPage = lastIndexOfPage - postsPerPage\n  const fullIndexes = []\n\n  for (let i = firstIndexofPage; i <= lastIndexOfPage; i++) {\n    fullIndexes.push(i)\n  }\n\n  const mergeData = (dataToBeMerged) => {\n    const res = Array.from(dataToBeMerged.reduce(\n      (m, {name, value}) => m.set(name, (m.get(name) || 0) + value), new Map\n    ), ([name, value]) => ({name, value}));\n\n    var byDate = res.slice(0);\n    byDate.sort(function(a,b) {\n    return b.value - a.value;\n    });\n    return byDate\n\n  }\n\n  useEffect(() => {\n    TourneyUsersWithValues = []\n  })\n\n  useEffect(() => {\n    if (FinalLeaderboard) {\n      setCurrentPosts(FinalLeaderboard.slice(firstIndexofPage,lastIndexOfPage))\n    }\n  }, [FinalLeaderboard,currentPage])\n   \n  useEffect(() => {\n    if (CompiledDataToBeMerged) {\n      setFinalLeaderboard(mergeData(CompiledDataToBeMerged))\n    }\n\n  }, [CompiledDataToBeMerged])\n\n  const paginate = (pageNum) => {\n    setcurrentPage(pageNum)\n  }\n\n  return (\n    <>\n    {currentPosts.map((Person,index) => {\n      return <Individualperson {...Person} index={fullIndexes[index]} />\n    })}\n    <Pagination postsPerPage={postsPerPage} totalPosts={FinalLeaderboard.length} paginate={paginate}/>\n\n      {users.length > 0 && secondusers.length > 0 && listofAllTourneys.map((tourney) => {\n        return (\n        <Tourney tourney={tourney} setCompiledDataToBeMerged={setCompiledDataToBeMerged}/>\n      )})}\n      \n      </>\n  );\n}\n\n// u dont need to pass all the shit as children and then back from children to parent, you can just do all the mapping in parent\n// find way to make labelvalue fire once removelabel is done use conditional useEffect put dependency as the thing that changes\n\n\nexport const Tourney = ({tourney,setCompiledDataToBeMerged}) => {\n  return (\n    <>\n         {tourney.map((user) => {\n        return (\n          <>\n          <IndividualPlayerInfo {...user} setCompiledDataToBeMerged={setCompiledDataToBeMerged}/>\n \n          </>\n        )\n        \n      })}\n    </>\n  )\n\n}\n\nexport const IndividualPlayerInfo = ({label,position,user,setCompiledDataToBeMerged}) => {\n  if (position === 4) {\n    label = '4'\n  }\n  const [correctPosition,value] = useParse(label)\n  useEffect(() => {\n    if (value) {\n      TourneyUsersWithValues.unshift({name:user.nickname,value:value})\n      setCompiledDataToBeMerged(TourneyUsersWithValues)\n    }\n  }, [value])\n  return (\n    <div className=\"d-flex\">\n    </div>\n  )\n\n}\n\nexport const Individualperson = ({name,value,index}) => {\n  return (\n    <div className='title-banner text-center'>\n    <img className=\"golden\" src={GoldenDiv}/>\n    <h1 className=\"display-1 inside-Golden index-Golden\">{index+1}.</h1>\n    <h1 className=\"display-1 inside-Golden text-Golden\">{name}</h1>\n    <h1 className=\"display-1 inside-Golden\" id=\"value-Golden\">{value}</h1>\n    </div>\n  )\n\n}\n\n\n\n\n\nexport default App;","C:\\Users\\brady\\mkleaderboard\\src\\data\\data.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\urlGet.js",["88","89","90"],"import Data from './data/data'\r\n\r\nconst urlGet = (CountryName) => {\r\n    const urls = []\r\n    Data.map((Country) => {\r\n        return Country.ListOfCountries.map((UpperCountry) => {\r\n                return UpperCountry.SubcountryList.map((SubCountry) => {\r\n                    if (SubCountry.Name == CountryName) {\r\n                        return SubCountry.ListOfTournaments.map((Tourney) => {\r\n                            if (Tourney.TourneyName !== \"Final Leaderboard\") {\r\n                                urls.push(Tourney.url)\r\n                            }\r\n                        })\r\n                    }\r\n \r\n    \r\n                }) \r\n        })\r\n    })\r\n    return urls\r\n}\r\n\r\nexport default urlGet","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\AllCountries.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\Components\\ListOfTourneyNavbar.js",["91"],"import TourneyNameGet from \"../TourneyNames\"\r\n\r\n// E.g. Final Leaderboard, tourney 1\r\nconst DisplayList = (CountryName) => {\r\n    return (\r\n        <div className=\"container-fluid bg-warning d-flex justify-content-evenly\">\r\n        {TourneyNameGet(\"Brazil\").map((Name) => {\r\n            return <a>{Name}</a>\r\n        })}\r\n        </div>\r\n    )\r\n    }\r\n\r\n    export default DisplayList","C:\\Users\\brady\\mkleaderboard\\src\\TourneyNames.js",["92","93","94"],"import Data from './data/data'\r\n\r\nconst TourneyNameGet = (CountryName) => {\r\n    const TourneyList = []\r\n    Data.map((Country) => {\r\n        return Country.ListOfCountries.map((UpperCountry) => {\r\n                return UpperCountry.SubcountryList.map((SubCountry) => {\r\n                    if (SubCountry.Name == CountryName) {\r\n                        return SubCountry.ListOfTournaments.map((Tourney) => {\r\n                                TourneyList.push(Tourney.TourneyName)\r\n                            \r\n                        })\r\n                    }\r\n    \r\n    \r\n                }) \r\n        })\r\n    })\r\n    return TourneyList\r\n}\r\n\r\nexport default TourneyNameGet\r\n","C:\\Users\\brady\\mkleaderboard\\src\\Components\\SearchFilter.js",[],{"ruleId":"95","severity":1,"message":"96","line":7,"column":8,"nodeType":"97","messageId":"98","endLine":7,"endColumn":18},{"ruleId":"95","severity":1,"message":"99","line":8,"column":51,"nodeType":"97","messageId":"98","endLine":8,"endColumn":55},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":27,"column":6,"nodeType":"106","endLine":27,"endColumn":8,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":39,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":42,"column":25,"nodeType":"114","messageId":"115","endLine":42,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":42,"column":51,"nodeType":"114","messageId":"115","endLine":42,"endColumn":53},{"ruleId":"112","severity":1,"message":"113","line":45,"column":30,"nodeType":"114","messageId":"115","endLine":45,"endColumn":32},{"ruleId":"112","severity":1,"message":"113","line":45,"column":56,"nodeType":"114","messageId":"115","endLine":45,"endColumn":58},{"ruleId":"104","severity":1,"message":"116","line":55,"column":6,"nodeType":"106","endLine":55,"endColumn":8,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":59,"column":8,"nodeType":"106","endLine":59,"endColumn":25,"suggestions":"119"},{"ruleId":"95","severity":1,"message":"120","line":13,"column":12,"nodeType":"97","messageId":"98","endLine":13,"endColumn":16},{"ruleId":"95","severity":1,"message":"121","line":13,"column":18,"nodeType":"97","messageId":"98","endLine":13,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":47,"column":21,"nodeType":"124","endLine":47,"endColumn":100},{"ruleId":"95","severity":1,"message":"125","line":92,"column":12,"nodeType":"97","messageId":"98","endLine":92,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":100,"column":9,"nodeType":"124","endLine":100,"endColumn":85},{"ruleId":"122","severity":1,"message":"123","line":105,"column":36,"nodeType":"124","endLine":105,"endColumn":74},{"ruleId":"95","severity":1,"message":"126","line":120,"column":7,"nodeType":"97","messageId":"98","endLine":120,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":124,"column":1,"nodeType":"129","messageId":"130","endLine":156,"endColumn":11},{"ruleId":"95","severity":1,"message":"131","line":9,"column":7,"nodeType":"97","messageId":"98","endLine":9,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":36,"column":70,"nodeType":"134","messageId":"135","endLine":36,"endColumn":77,"fix":"136"},{"ruleId":"104","severity":1,"message":"137","line":55,"column":6,"nodeType":"106","endLine":55,"endColumn":36,"suggestions":"138"},{"ruleId":"95","severity":1,"message":"139","line":109,"column":10,"nodeType":"97","messageId":"98","endLine":109,"endColumn":25},{"ruleId":"104","severity":1,"message":"140","line":115,"column":6,"nodeType":"106","endLine":115,"endColumn":13,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":126,"column":5,"nodeType":"124","endLine":126,"endColumn":46},{"ruleId":"144","severity":1,"message":"145","line":7,"column":69,"nodeType":"146","messageId":"147","endLine":7,"endColumn":71},{"ruleId":"112","severity":1,"message":"113","line":8,"column":41,"nodeType":"114","messageId":"115","endLine":8,"endColumn":43},{"ruleId":"144","severity":1,"message":"148","line":9,"column":75,"nodeType":"146","messageId":"149","endLine":9,"endColumn":77},{"ruleId":"122","severity":1,"message":"150","line":8,"column":20,"nodeType":"124","endLine":8,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":7,"column":69,"nodeType":"146","messageId":"147","endLine":7,"endColumn":71},{"ruleId":"112","severity":1,"message":"113","line":8,"column":41,"nodeType":"114","messageId":"115","endLine":8,"endColumn":43},{"ruleId":"144","severity":1,"message":"148","line":9,"column":75,"nodeType":"146","messageId":"149","endLine":9,"endColumn":77},"no-unused-vars","'LinkNavbar' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["153"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'removeLabel'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'labelValue'. Either include it or remove the dependency array.",["155"],"'Show' is assigned a value but never used.","'setShow' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'countryName' is assigned a value but never used.","'DropDown' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'fetch' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"156","text":"157"},"React Hook useEffect has missing dependencies: 'firstIndexofPage' and 'lastIndexOfPage'. Either include them or remove the dependency array.",["158"],"'correctPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCompiledDataToBeMerged' and 'user.nickname'. Either include them or remove the dependency array. If 'setCompiledDataToBeMerged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},[1255,1255],"()",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [url]",{"range":"170","text":"171"},"Update the dependencies array to be: [removeLabel]",{"range":"172","text":"173"},"Update the dependencies array to be: [correctPosition, labelValue]",{"range":"174","text":"175"},"Update the dependencies array to be: [FinalLeaderboard, currentPage, firstIndexofPage, lastIndexOfPage]",{"range":"176","text":"177"},"Update the dependencies array to be: [setCompiledDataToBeMerged, user.nickname, value]",{"range":"178","text":"179"},[793,795],"[url]",[1282,1284],"[removeLabel]",[1339,1356],"[correctPosition, labelValue]",[1623,1653],"[FinalLeaderboard, currentPage, firstIndexofPage, lastIndexOfPage]",[3285,3292],"[setCompiledDataToBeMerged, user.nickname, value]"]