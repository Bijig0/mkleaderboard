[{"C:\\Users\\brady\\mkleaderboard\\src\\index.js":"1","C:\\Users\\brady\\mkleaderboard\\src\\reportWebVitals.js":"2","C:\\Users\\brady\\mkleaderboard\\src\\fetch.js":"3","C:\\Users\\brady\\mkleaderboard\\src\\parse.js":"4","C:\\Users\\brady\\mkleaderboard\\src\\pagination.js":"5","C:\\Users\\brady\\mkleaderboard\\src\\Components\\Navbar.js":"6","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\App.js":"7","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\Brazil.js":"8","C:\\Users\\brady\\mkleaderboard\\src\\data\\data.js":"9"},{"size":726,"mtime":1610778587828,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":846,"mtime":1610634204717,"results":"13","hashOfConfig":"11"},{"size":1427,"mtime":1610620926799,"results":"14","hashOfConfig":"11"},{"size":724,"mtime":1610672030660,"results":"15","hashOfConfig":"11"},{"size":2851,"mtime":1610778974965,"results":"16","hashOfConfig":"11"},{"size":4122,"mtime":1610778048215,"results":"17","hashOfConfig":"11"},{"size":523,"mtime":1610778826547,"results":"18","hashOfConfig":"11"},{"size":8119,"mtime":1610780216194,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1yzpjz6",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\brady\\mkleaderboard\\src\\index.js",["45","46"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './All Countries/Brazil';\nimport reportWebVitals from './reportWebVitals';\nimport Banner from './Components/Navbar'\nimport {  BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Banner/>\n    <Route exact path ='/'>\n      <App/>\n    </Route>\n\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["47","48"],"C:\\Users\\brady\\mkleaderboard\\src\\reportWebVitals.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\fetch.js",["49"],"// const arr = [ { 'name': 'P1', 'value': 150 }, { 'name': 'P1', 'value': 150 }, { 'name': 'P2', 'value': 200 }, { 'name': 'P3', 'value': 450 } ];\r\n\r\n// const res = Array.from(arr.reduce(\r\n//   (m, {user.nickname, value}) => m.set(user.nickname, (m.get(user.nickname) || 0) + value), new Map\r\n// ), ([user.nickname, value]) => ({user.nickname, value}));\r\n// console.log(res);\r\n\r\n\r\nimport {useState,useEffect} from 'react'\r\n\r\nconst useFetch = (url) => {\r\n    const [users,setUsers] = useState([])\r\n\r\n  const getUsers = async (url) => {\r\n      const response = await fetch(url)\r\n      console.log(response);\r\n      const parsed = await response.json()\r\n      const ranking = await parsed.ranking\r\n      setUsers(ranking)\r\n            \r\n   \r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers(url)\r\n  }, [])\r\n  return users\r\n}\r\n\r\nexport default useFetch\r\n\r\n","C:\\Users\\brady\\mkleaderboard\\src\\parse.js",["50","51","52","53","54","55","56"],"import {useEffect, useState} from 'react'\r\n\r\nconst useParse = (label) => {\r\n  const [correctPosition,setCorrectPosition] = useState(\"\")\r\n  const [value,setValue] = useState(0)\r\n\r\n  const labelValue = () => {\r\n    switch (correctPosition) {\r\n      case 1:\r\n        setValue(value + 350)\r\n        break;\r\n      case 2:\r\n        setValue(value + 260)\r\n        break;\r\n      case 3:\r\n        setValue(value + 230)\r\n        break;\r\n      case 4:\r\n        setValue(value + 200)\r\n        break;\r\n      case 5:\r\n        setValue(value + 140)\r\n        break;\r\n      case 7:\r\n        setValue(value + 70)\r\n        break;\r\n      case 9:\r\n        setValue(value + 40)\r\n        break;\r\n      case 13:\r\n        setValue(value + 20)\r\n        break;\r\n      case 17:\r\n        setValue(value + 10)\r\n        break;\r\n      case 25:\r\n        setValue(value + 5)\r\n        break;\r\n    }\r\n  }\r\n  const removeLabel = () => {\r\n    if (label.charAt(1) == '.' || label.charAt(1) == '-') {\r\n      setCorrectPosition(parseInt(label.charAt(0)))\r\n    }\r\n    else if (label.charAt(2) == '.' || label.charAt(2) == '-') {\r\n      setCorrectPosition(parseInt(label.substring(0,2)))\r\n    }\r\n    else {\r\n      setCorrectPosition(parseInt(label.substring(0,3)))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    removeLabel()\r\n  }, [])\r\n\r\n    useEffect(() => {\r\n      labelValue()\r\n    }, [correctPosition])\r\n\r\n    return [correctPosition,value]\r\n}\r\n\r\nexport default useParse\r\n","C:\\Users\\brady\\mkleaderboard\\src\\pagination.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\Components\\Navbar.js",["57","58","59","60","61","62"],"import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport logoBanner from '../img/MK11ProKompBanner.png'\r\nimport uuid from 'react-uuid'\r\nimport Data from \"../data/data\"\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <>\r\n    <div style={{width:'100%'}} className=\"bg-dark\">\r\n    <img style={{width:'100%'}} src={logoBanner}></img>\r\n    </div>\r\n    <EventTab/>\r\n    </>\r\n\r\n    )}\r\n\r\nconst EventTab = () => {\r\n    const [Show, setShow] = useState(false)\r\n        return (\r\n            <>\r\n            <div className='d-flex justify-content-center bg-dark'>\r\n                <a onClick={() => setShow(true)} href=\"#\" className=\"display-1\">Events</a>\r\n            </div>\r\n            {Show && <RegionCardList/>}\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nconst RegionCardList = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-between\">\r\n        {Data.map((card) => {\r\n            return <RegionalCard {...card}/>\r\n        })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst RegionalCard = ({Date,img,ListOfCountries}) => {\r\n    return (\r\n        <div className=\"d-flex flex-column\">\r\n        <div className=\"col-md-6 px-5\">\r\n    <img src={img} className=\"card-img-top\"/>\r\n        <div className=\"card-header\">\r\n            <h1 className=\"card-title\">{Date}</h1>\r\n            <div className=\"d-flex justify-content-between\">\r\n                {ListOfCountries.map((Country) => {\r\n                    return (\r\n                    <DisplayRowOfMainCountries key={uuid()} {...Country} />\r\n                )})}\r\n            </div>\r\n        </div>\r\n</div>\r\n</div>\r\n)\r\n}\r\n\r\nconst DisplayRowOfMainCountries = ({DisplayCountry,SubcountryList}) => {\r\n    const [showCountryState,setShowCountryState] = useState(false)\r\n    const [countryName, setcountryName] = useState(\"\")\r\n    const showCountry = (event) => {\r\n        setcountryName(event.target.innerText)\r\n        setShowCountryState(true)\r\n    }\r\n    return (\r\n        <div className='d-flex flex-direction-column'>\r\n        <p onClick={showCountry}>{DisplayCountry}</p>\r\n        {showCountryState && SubcountryList.map((SubCountry) => {\r\n            return <a href=\"#\">{SubCountry.Name}</a>\r\n        }) }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// Turn this last part that shows subcountry.name into its own file that returns subcountry.name, then put it into index.js as it returns ListOfTournament Urls\r\n\r\n// Depending on what country is clicked, access the link of urls, pass it into App as props, then map the url props and merge accordingly\r\n\r\n//If you want only 1 to show, you need to make a new component, then put the rest into a list, depending on the click add the id and delete all the rest sop that that is the only id left in the list and then display the list\r\n\r\n// for every country, if the name is equal to setname, display sub country names\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Banner","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\App.js",["63","64","65","66","67","68","69"],"import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport{ useEffect,useState } from 'react'\nimport useFetch from '../fetch'\nimport useParse from '../parse'\nimport Pagination from '../pagination'\nimport GoldenDiv from '../img/goldenplaceholder (2).png'\nimport '../css/override.css'\nconst fetch = require(\"node-fetch\")\nconst TourneyUsersWithValues = []\n\nexport function App() {\n  const [currentPosts,setCurrentPosts] = useState([])\n  const [currentPage, setcurrentPage] = useState(1)\n  const postsPerPage = 8\n  const [CompiledDataToBeMerged, setCompiledDataToBeMerged] = useState([])\n  const [FinalLeaderboard, setFinalLeaderboard] = useState([])\n  const users = useFetch('https://cors-anywhere.herokuapp.com/https://api.eslgaming.com/play/v1/leagues/217909/ranking?limit=0&offset=0')\n  const secondusers = useFetch('https://cors-anywhere.herokuapp.com/https://api.eslgaming.com/play/v1/leagues/218227%20/ranking?limit=0&offset=0')\n  // const users = data\n  const listofAllTourneys = [users,secondusers]\n\n  const lastIndexOfPage = currentPage * postsPerPage\n  const firstIndexofPage = lastIndexOfPage - postsPerPage\n  const fullIndexes = []\n\n  for (let i = firstIndexofPage; i <= lastIndexOfPage; i++) {\n    fullIndexes.push(i)\n  }\n\n  const mergeData = (dataToBeMerged) => {\n    const res = Array.from(dataToBeMerged.reduce(\n      (m, {name, value}) => m.set(name, (m.get(name) || 0) + value), new Map\n    ), ([name, value]) => ({name, value}));\n\n    var byDate = res.slice(0);\n    byDate.sort(function(a,b) {\n    return b.value - a.value;\n    });\n    return byDate\n\n  }\n\n  useEffect(() => {\n    if (FinalLeaderboard) {\n      setCurrentPosts(FinalLeaderboard.slice(firstIndexofPage,lastIndexOfPage))\n  \n    }\n  }, [FinalLeaderboard,currentPage])\n   \n  useEffect(() => {\n    if (CompiledDataToBeMerged) {\n      setFinalLeaderboard(mergeData(CompiledDataToBeMerged))\n    }\n\n  }, [CompiledDataToBeMerged])\n\n  const paginate = (pageNum) => {\n    setcurrentPage(pageNum)\n  }\n\n  return (\n    <>\n    {currentPosts.map((Person,index) => {\n      return <Individualperson {...Person} index={fullIndexes[index]} />\n    })}\n    <Pagination postsPerPage={postsPerPage} totalPosts={FinalLeaderboard.length} paginate={paginate}/>\n\n      {users.length > 0 && secondusers.length > 0 && listofAllTourneys.map((tourney) => {\n        return (\n        <Tourney tourney={tourney} setCompiledDataToBeMerged={setCompiledDataToBeMerged}/>\n      )})}\n      \n      </>\n  );\n}\n\n// u dont need to pass all the shit as children and then back from children to parent, you can just do all the mapping in parent\n// find way to make labelvalue fire once removelabel is done using async await i reckon\n\n\nexport const Tourney = ({tourney,setCompiledDataToBeMerged}) => {\n  return (\n    <>\n         {tourney.map((user) => {\n        return (\n          <>\n          <IndividualPlayerInfo {...user} setCompiledDataToBeMerged={setCompiledDataToBeMerged}/>\n \n          </>\n        )\n        \n      })}\n    </>\n  )\n\n}\n\nexport const IndividualPlayerInfo = ({label,position,user,setCompiledDataToBeMerged}) => {\n  if (position == 4) {\n    label = '4'\n  }\n  const [correctPosition,value] = useParse(label)\n  useEffect(() => {\n    if (value) {\n      TourneyUsersWithValues.unshift({name:user.nickname,value:value})\n      setCompiledDataToBeMerged(TourneyUsersWithValues)\n    }\n  }, [value])\n  return (\n    <div className=\"d-flex\">\n    {/* <h1 className=\"display-1\">{correctPosition}.</h1>\n    <h1 className=\"display-1\">{user.nickname}</h1>\n    <h1 className=\"display-1 mx-5\">{value}</h1>\n    <h1 onClick={() => {\n      console.log(TourneyUsersWithValues)\n      console.log(value)\n    }\n     }>Click Me</h1> */}\n    </div>\n  )\n\n}\n\nexport const Individualperson = ({name,value,index}) => {\n  return (\n    <div className='title-banner text-center'>\n    <img className=\"golden\" src={GoldenDiv}/>\n    {/* make the index from paginate */}\n    <h1 className=\"display-1 inside-Golden\">{index+1}.</h1>\n    <h1 className=\"display-1 inside-Golden\">{name}</h1>\n    <h1 className=\"display-1 mx-5 inside-Golden\">{value}</h1>\n    </div>\n  )\n\n}\n\n\n\n\n\nexport default App;","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\Brazil.js",["70","71","72","73","74","75","76","77"],"import '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport{ useEffect,useState } from 'react'\r\nimport useFetch from '../fetch'\r\nimport useParse from '../parse'\r\nimport Pagination from '../pagination'\r\nimport GoldenDiv from '../img/goldenplaceholder (2).png'\r\nimport '../css/override.css'\r\nimport { App } from \"./App\";\r\nconst fetch = require(\"node-fetch\")\r\nconst TourneyUsersWithValues = []\r\n\r\nconst Brazil = () => {\r\n    return (\r\n        <>\r\n        <App/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Brazil","C:\\Users\\brady\\mkleaderboard\\src\\data\\data.js",[],{"ruleId":"78","severity":1,"message":"79","line":7,"column":43,"nodeType":"80","messageId":"81","endLine":7,"endColumn":49},{"ruleId":"78","severity":1,"message":"82","line":7,"column":51,"nodeType":"80","messageId":"81","endLine":7,"endColumn":55},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":27,"column":6,"nodeType":"89","endLine":27,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":8,"column":5,"nodeType":"93","messageId":"94","endLine":39,"endColumn":6},{"ruleId":"95","severity":1,"message":"96","line":42,"column":25,"nodeType":"97","messageId":"98","endLine":42,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":42,"column":51,"nodeType":"97","messageId":"98","endLine":42,"endColumn":53},{"ruleId":"95","severity":1,"message":"96","line":45,"column":30,"nodeType":"97","messageId":"98","endLine":45,"endColumn":32},{"ruleId":"95","severity":1,"message":"96","line":45,"column":56,"nodeType":"97","messageId":"98","endLine":45,"endColumn":58},{"ruleId":"87","severity":1,"message":"99","line":55,"column":6,"nodeType":"89","endLine":55,"endColumn":8,"suggestions":"100"},{"ruleId":"87","severity":1,"message":"101","line":59,"column":8,"nodeType":"89","endLine":59,"endColumn":25,"suggestions":"102"},{"ruleId":"78","severity":1,"message":"103","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":11,"column":5,"nodeType":"106","endLine":11,"endColumn":50},{"ruleId":"107","severity":1,"message":"108","line":23,"column":17,"nodeType":"106","endLine":23,"endColumn":81},{"ruleId":"104","severity":1,"message":"105","line":46,"column":5,"nodeType":"106","endLine":46,"endColumn":46},{"ruleId":"78","severity":1,"message":"109","line":63,"column":12,"nodeType":"80","messageId":"81","endLine":63,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":72,"column":20,"nodeType":"106","endLine":72,"endColumn":32},{"ruleId":"78","severity":1,"message":"110","line":9,"column":7,"nodeType":"80","messageId":"81","endLine":9,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":33,"column":70,"nodeType":"113","messageId":"114","endLine":33,"endColumn":77,"fix":"115"},{"ruleId":"87","severity":1,"message":"116","line":49,"column":6,"nodeType":"89","endLine":49,"endColumn":36,"suggestions":"117"},{"ruleId":"95","severity":1,"message":"96","line":100,"column":16,"nodeType":"97","messageId":"98","endLine":100,"endColumn":18},{"ruleId":"78","severity":1,"message":"118","line":103,"column":10,"nodeType":"80","messageId":"81","endLine":103,"endColumn":25},{"ruleId":"87","severity":1,"message":"119","line":109,"column":6,"nodeType":"89","endLine":109,"endColumn":13,"suggestions":"120"},{"ruleId":"104","severity":1,"message":"105","line":128,"column":5,"nodeType":"106","endLine":128,"endColumn":46},{"ruleId":"78","severity":1,"message":"103","line":3,"column":9,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},{"ruleId":"78","severity":1,"message":"121","line":3,"column":19,"nodeType":"80","messageId":"81","endLine":3,"endColumn":27},{"ruleId":"78","severity":1,"message":"122","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":16},{"ruleId":"78","severity":1,"message":"123","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":16},{"ruleId":"78","severity":1,"message":"124","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":18},{"ruleId":"78","severity":1,"message":"125","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":17},{"ruleId":"78","severity":1,"message":"110","line":10,"column":7,"nodeType":"80","messageId":"81","endLine":10,"endColumn":12},{"ruleId":"78","severity":1,"message":"126","line":11,"column":7,"nodeType":"80","messageId":"81","endLine":11,"endColumn":29},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["129"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'removeLabel'. Either include it or remove the dependency array.",["130"],"React Hook useEffect has a missing dependency: 'labelValue'. Either include it or remove the dependency array.",["131"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'countryName' is assigned a value but never used.","'fetch' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"132","text":"133"},"React Hook useEffect has missing dependencies: 'firstIndexofPage' and 'lastIndexOfPage'. Either include them or remove the dependency array.",["134"],"'correctPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCompiledDataToBeMerged' and 'user.nickname'. Either include them or remove the dependency array. If 'setCompiledDataToBeMerged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["135"],"'useState' is defined but never used.","'useFetch' is defined but never used.","'useParse' is defined but never used.","'Pagination' is defined but never used.","'GoldenDiv' is defined but never used.","'TourneyUsersWithValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},[1417,1417],"()",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [url]",{"range":"146","text":"147"},"Update the dependencies array to be: [removeLabel]",{"range":"148","text":"149"},"Update the dependencies array to be: [correctPosition, labelValue]",{"range":"150","text":"151"},"Update the dependencies array to be: [FinalLeaderboard, currentPage, firstIndexofPage, lastIndexOfPage]",{"range":"152","text":"153"},"Update the dependencies array to be: [setCompiledDataToBeMerged, user.nickname, value]",{"range":"154","text":"155"},[793,795],"[url]",[1282,1284],"[removeLabel]",[1339,1356],"[correctPosition, labelValue]",[1730,1760],"[FinalLeaderboard, currentPage, firstIndexofPage, lastIndexOfPage]",[3351,3358],"[setCompiledDataToBeMerged, user.nickname, value]"]