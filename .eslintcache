[{"C:\\Users\\brady\\mkleaderboard\\src\\index.js":"1","C:\\Users\\brady\\mkleaderboard\\src\\reportWebVitals.js":"2","C:\\Users\\brady\\mkleaderboard\\src\\fetch.js":"3","C:\\Users\\brady\\mkleaderboard\\src\\parse.js":"4","C:\\Users\\brady\\mkleaderboard\\src\\pagination.js":"5","C:\\Users\\brady\\mkleaderboard\\src\\Components\\Navbar.js":"6","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\App.js":"7","C:\\Users\\brady\\mkleaderboard\\src\\data\\data.js":"8","C:\\Users\\brady\\mkleaderboard\\src\\urlGet.js":"9","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\AllCountries.js":"10","C:\\Users\\brady\\mkleaderboard\\src\\Components\\ListOfTourneyNavbar.js":"11","C:\\Users\\brady\\mkleaderboard\\src\\TourneyNames.js":"12"},{"size":1478,"mtime":1610846102267,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":846,"mtime":1610634204717,"results":"16","hashOfConfig":"14"},{"size":1427,"mtime":1610620926799,"results":"17","hashOfConfig":"14"},{"size":830,"mtime":1610806443123,"results":"18","hashOfConfig":"14"},{"size":4369,"mtime":1610845026611,"results":"19","hashOfConfig":"14"},{"size":3776,"mtime":1610849164082,"results":"20","hashOfConfig":"14"},{"size":10004,"mtime":1610781840721,"results":"21","hashOfConfig":"14"},{"size":707,"mtime":1610794239479,"results":"22","hashOfConfig":"14"},{"size":1427,"mtime":1610802805292,"results":"23","hashOfConfig":"14"},{"size":273,"mtime":1610846052217,"results":"24","hashOfConfig":"14"},{"size":676,"mtime":1610845940988,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1yzpjz6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},"C:\\Users\\brady\\mkleaderboard\\src\\index.js",["58","59","60","61","62","63","64","65","66","67","68","69"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Brazil,LANorth,LASouth,ME,Mexico,NAEast,NAWest,EUEast,EUWest,OCE} from './All Countries/AllCountries';\nimport reportWebVitals from './reportWebVitals';\nimport Banner from './Components/Navbar'\nimport LinkNavbar from './Components/ListOfTourneyNavbar'\nimport {  BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Banner/>\n    {/* <Switch>\n    <Route exact path ='/'> */}\n      <OCE/>\n      <LinkNavbar/>\n    {/* </Route>\n    <Route exact path ='/Brazil'>\n      <Brazil/>\n    </Route>\n    <Route exact path ='/EUEast'>\n      <EUEast/>\n    </Route>\n    <Route exact path ='/EUWest'>\n      <EUWest/>\n    </Route>\n    <Route exact path ='/LANorth'>\n      <LANorth/>\n    </Route>\n    <Route exact path ='/LASouth'>\n      <LASouth/>\n    </Route>\n    <Route exact path ='/ME'>\n      <ME/>\n    </Route>\n    <Route exact path ='/Mexico'>\n      <Mexico/>\n    </Route>\n    <Route exact path ='/NAWest'>\n      <NAWest/>\n    </Route>\n    <Route exact path ='/NAEast'>\n      <NAEast/>\n    </Route>\n    </Switch> */}\n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["70","71"],"C:\\Users\\brady\\mkleaderboard\\src\\reportWebVitals.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\fetch.js",["72"],"// const arr = [ { 'name': 'P1', 'value': 150 }, { 'name': 'P1', 'value': 150 }, { 'name': 'P2', 'value': 200 }, { 'name': 'P3', 'value': 450 } ];\r\n\r\n// const res = Array.from(arr.reduce(\r\n//   (m, {user.nickname, value}) => m.set(user.nickname, (m.get(user.nickname) || 0) + value), new Map\r\n// ), ([user.nickname, value]) => ({user.nickname, value}));\r\n// console.log(res);\r\n\r\n\r\nimport {useState,useEffect} from 'react'\r\n\r\nconst useFetch = (url) => {\r\n    const [users,setUsers] = useState([])\r\n\r\n  const getUsers = async (url) => {\r\n      const response = await fetch(url)\r\n      console.log(response);\r\n      const parsed = await response.json()\r\n      const ranking = await parsed.ranking\r\n      setUsers(ranking)\r\n            \r\n   \r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers(url)\r\n  }, [])\r\n  return users\r\n}\r\n\r\nexport default useFetch\r\n\r\n","C:\\Users\\brady\\mkleaderboard\\src\\parse.js",["73","74","75","76","77","78","79"],"import {useEffect, useState} from 'react'\r\n\r\nconst useParse = (label) => {\r\n  const [correctPosition,setCorrectPosition] = useState(\"\")\r\n  const [value,setValue] = useState(0)\r\n\r\n  const labelValue = () => {\r\n    switch (correctPosition) {\r\n      case 1:\r\n        setValue(value + 350)\r\n        break;\r\n      case 2:\r\n        setValue(value + 260)\r\n        break;\r\n      case 3:\r\n        setValue(value + 230)\r\n        break;\r\n      case 4:\r\n        setValue(value + 200)\r\n        break;\r\n      case 5:\r\n        setValue(value + 140)\r\n        break;\r\n      case 7:\r\n        setValue(value + 70)\r\n        break;\r\n      case 9:\r\n        setValue(value + 40)\r\n        break;\r\n      case 13:\r\n        setValue(value + 20)\r\n        break;\r\n      case 17:\r\n        setValue(value + 10)\r\n        break;\r\n      case 25:\r\n        setValue(value + 5)\r\n        break;\r\n    }\r\n  }\r\n  const removeLabel = () => {\r\n    if (label.charAt(1) == '.' || label.charAt(1) == '-') {\r\n      setCorrectPosition(parseInt(label.charAt(0)))\r\n    }\r\n    else if (label.charAt(2) == '.' || label.charAt(2) == '-') {\r\n      setCorrectPosition(parseInt(label.substring(0,2)))\r\n    }\r\n    else {\r\n      setCorrectPosition(parseInt(label.substring(0,3)))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    removeLabel()\r\n  }, [])\r\n\r\n    useEffect(() => {\r\n      labelValue()\r\n    }, [correctPosition])\r\n\r\n    return [correctPosition,value]\r\n}\r\n\r\nexport default useParse\r\n","C:\\Users\\brady\\mkleaderboard\\src\\pagination.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\Components\\Navbar.js",["80","81","82","83","84","85"],"import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport logoBanner from '../img/MK11ProKompBanner.png'\r\nimport uuid from 'react-uuid'\r\nimport Data from \"../data/data\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n            <div className=\"navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <img src={logoBanner} alt=\"MK11\" class=\"d-inline-block align-top\" height=\"50\"></img>\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <RegionCardList/>\r\n                </ul>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    </>\r\n\r\n    )}\r\n\r\n// const EventTab = () => {\r\n//     const [Show, setShow] = useState(false)\r\n//         return (\r\n//             <>\r\n//             <div className='d-flex justify-content-center bg-dark'>\r\n//                 <a onClick={() => setShow(true)} href=\"#\" className=\"display-1\">Events</a>\r\n//             </div>\r\n//             {Show && <RegionCardList/>}\r\n//             </>\r\n//         )\r\n\r\n// }\r\n\r\nconst RegionCardList = () => {\r\n    return (\r\n        <>\r\n        {Data.map((card) => {\r\n            return <RegionalCard {...card}/>\r\n        })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst RegionalCard = ({ListOfCountries}) => {\r\n    return (\r\n        <>\r\n                {ListOfCountries.map((Country) => {\r\n                    return (\r\n                    <DisplayRowOfMainCountries key={uuid()} {...Country} />\r\n                )})}\r\n            </>\r\n)\r\n}\r\n\r\nconst DisplayRowOfMainCountries = ({DisplayCountry,SubcountryList}) => {\r\n    const [showCountryState,setShowCountryState] = useState(false)\r\n    const [countryName, setcountryName] = useState(\"\")\r\n    const showCountry = (event) => {\r\n        setcountryName(event.target.innerText)\r\n        setShowCountryState(!showCountryState)\r\n    }\r\n    return (\r\n        <>\r\n        <li className=\"nav-item\">\r\n        <a className=\"nav-link dropdown-toggle mx-2\" href=\"#\" onClick={showCountry}>{DisplayCountry}</a>\r\n        </li>\r\n        {/* make this shit its own component so you can make it a dropdown menu */}\r\n      \r\n        {showCountryState && SubcountryList.map((SubCountry) => {\r\n            return <Link to=\"/ME\" ><a href=\"#\" className=\"nav-link mx-2\">{SubCountry.Name}</a></Link>\r\n        }) }\r\n        {/* {showCountryState && \r\n            <ul className=\"dropdown-menu show\">\r\n                {SubcountryList.map((Subcountry) => {\r\n                    return <h1>{Subcountry.Name}</h1>\r\n                })}\r\n            \r\n            </ul>} */}\r\n        {/* Also make the lists new Array each time so no overlapping */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst DropDown = () => {\r\n\r\n}\r\n\r\n{/* <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n      <img src=\"./img/MK11ProKompBanner.png\" alt=\"\" class=\"d-inline-block align-top\" height=\"50\">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" href=\"#\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\">\r\n            Dropdown\r\n          </a>\r\n          <ul class=\"dropdown-menu\">\r\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr class=\"dropdown-divider\"></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      <form class=\"d-flex\">\r\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\">\r\n        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Banner","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\App.js",["86","87","88","89","90","91"],"import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport{ useEffect,useState } from 'react'\nimport useFetch from '../fetch'\nimport useParse from '../parse'\nimport Pagination from '../pagination'\nimport GoldenDiv from '../img/goldenplaceholder (2).png'\nimport '../css/override.css'\nconst fetch = require(\"node-fetch\")\nvar TourneyUsersWithValues = []\n\n// make useFetch into regular function so you can loop through it\n\n\nexport function App({urls}) {\n  const [currentPosts,setCurrentPosts] = useState([])\n  const [currentPage, setcurrentPage] = useState(1)\n  const postsPerPage = 8\n  const [CompiledDataToBeMerged, setCompiledDataToBeMerged] = useState([])\n  const [FinalLeaderboard, setFinalLeaderboard] = useState([])\n  const users = useFetch(urls[0])\n  const secondusers = useFetch(urls[1])\n  const listofAllTourneys = [users,secondusers]\n\n\n  const lastIndexOfPage = currentPage * postsPerPage\n  const firstIndexofPage = lastIndexOfPage - postsPerPage\n  const fullIndexes = []\n\n  for (let i = firstIndexofPage; i <= lastIndexOfPage; i++) {\n    fullIndexes.push(i)\n  }\n\n  const mergeData = (dataToBeMerged) => {\n    const res = Array.from(dataToBeMerged.reduce(\n      (m, {name, value}) => m.set(name, (m.get(name) || 0) + value), new Map\n    ), ([name, value]) => ({name, value}));\n\n    var byDate = res.slice(0);\n    byDate.sort(function(a,b) {\n    return b.value - a.value;\n    });\n    return byDate\n\n  }\n\n  useEffect(() => {\n    TourneyUsersWithValues = []\n  })\n\n  useEffect(() => {\n    if (FinalLeaderboard) {\n      setCurrentPosts(FinalLeaderboard.slice(firstIndexofPage,lastIndexOfPage))\n  \n    }\n  }, [FinalLeaderboard,currentPage])\n   \n  useEffect(() => {\n    if (CompiledDataToBeMerged) {\n      setFinalLeaderboard(mergeData(CompiledDataToBeMerged))\n    }\n\n  }, [CompiledDataToBeMerged])\n\n  const paginate = (pageNum) => {\n    setcurrentPage(pageNum)\n  }\n\n  return (\n    <>\n    {currentPosts.map((Person,index) => {\n      return <Individualperson {...Person} index={fullIndexes[index]} />\n    })}\n    <Pagination postsPerPage={postsPerPage} totalPosts={FinalLeaderboard.length} paginate={paginate}/>\n\n      {users.length > 0 && secondusers.length > 0 && listofAllTourneys.map((tourney) => {\n        return (\n        <Tourney tourney={tourney} setCompiledDataToBeMerged={setCompiledDataToBeMerged}/>\n      )})}\n      \n      </>\n  );\n}\n\n// u dont need to pass all the shit as children and then back from children to parent, you can just do all the mapping in parent\n// find way to make labelvalue fire once removelabel is done use conditional useEffect put dependency as the thing that changes\n\n\nexport const Tourney = ({tourney,setCompiledDataToBeMerged}) => {\n  return (\n    <>\n         {tourney.map((user) => {\n        return (\n          <>\n          <IndividualPlayerInfo {...user} setCompiledDataToBeMerged={setCompiledDataToBeMerged}/>\n \n          </>\n        )\n        \n      })}\n    </>\n  )\n\n}\n\nexport const IndividualPlayerInfo = ({label,position,user,setCompiledDataToBeMerged}) => {\n  if (position === 4) {\n    label = '4'\n  }\n  const [correctPosition,value] = useParse(label)\n  useEffect(() => {\n    if (value) {\n      TourneyUsersWithValues.unshift({name:user.nickname,value:value})\n      setCompiledDataToBeMerged(TourneyUsersWithValues)\n    }\n  }, [value])\n  return (\n    <div className=\"d-flex\">\n    </div>\n  )\n\n}\n\nexport const Individualperson = ({name,value,index}) => {\n  return (\n    <div className='title-banner text-center'>\n    <img className=\"golden\" src={GoldenDiv}/>\n    <h1 className=\"display-1 inside-Golden index-Golden\">{index+1}.</h1>\n    <h1 className=\"display-1 inside-Golden text-Golden\">{name}</h1>\n    <h1 className=\"display-1 mx-5 inside-Golden value-Golden\">{value}</h1>\n    </div>\n  )\n\n}\n\n\n\n\n\nexport default App;","C:\\Users\\brady\\mkleaderboard\\src\\data\\data.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\urlGet.js",["92","93","94"],"import Data from './data/data'\r\n\r\nconst urlGet = (CountryName) => {\r\n    const urls = []\r\n    Data.map((Country) => {\r\n        return Country.ListOfCountries.map((UpperCountry) => {\r\n                return UpperCountry.SubcountryList.map((SubCountry) => {\r\n                    if (SubCountry.Name == CountryName) {\r\n                        return SubCountry.ListOfTournaments.map((Tourney) => {\r\n                            if (Tourney.TourneyName !== \"Final Leaderboard\") {\r\n                                urls.push(Tourney.url)\r\n                            }\r\n                        })\r\n                    }\r\n \r\n    \r\n                }) \r\n        })\r\n    })\r\n    return urls\r\n}\r\n\r\nexport default urlGet","C:\\Users\\brady\\mkleaderboard\\src\\All Countries\\AllCountries.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\Components\\ListOfTourneyNavbar.js",[],"C:\\Users\\brady\\mkleaderboard\\src\\TourneyNames.js",["95","96","97"],"import Data from './data/data'\r\n\r\nconst TourneyNameGet = (CountryName) => {\r\n    const TourneyList = []\r\n    Data.map((Country) => {\r\n        return Country.ListOfCountries.map((UpperCountry) => {\r\n                return UpperCountry.SubcountryList.map((SubCountry) => {\r\n                    if (SubCountry.Name == CountryName) {\r\n                        return SubCountry.ListOfTournaments.map((Tourney) => {\r\n                                TourneyList.push(Tourney.TourneyName)\r\n                            \r\n                        })\r\n                    }\r\n    \r\n    \r\n                }) \r\n        })\r\n    })\r\n    return TourneyList\r\n}\r\n\r\nexport default TourneyNameGet\r\n",{"ruleId":"98","severity":1,"message":"99","line":4,"column":9,"nodeType":"100","messageId":"101","endLine":4,"endColumn":15},{"ruleId":"98","severity":1,"message":"102","line":4,"column":16,"nodeType":"100","messageId":"101","endLine":4,"endColumn":23},{"ruleId":"98","severity":1,"message":"103","line":4,"column":24,"nodeType":"100","messageId":"101","endLine":4,"endColumn":31},{"ruleId":"98","severity":1,"message":"104","line":4,"column":32,"nodeType":"100","messageId":"101","endLine":4,"endColumn":34},{"ruleId":"98","severity":1,"message":"105","line":4,"column":35,"nodeType":"100","messageId":"101","endLine":4,"endColumn":41},{"ruleId":"98","severity":1,"message":"106","line":4,"column":42,"nodeType":"100","messageId":"101","endLine":4,"endColumn":48},{"ruleId":"98","severity":1,"message":"107","line":4,"column":49,"nodeType":"100","messageId":"101","endLine":4,"endColumn":55},{"ruleId":"98","severity":1,"message":"108","line":4,"column":56,"nodeType":"100","messageId":"101","endLine":4,"endColumn":62},{"ruleId":"98","severity":1,"message":"109","line":4,"column":63,"nodeType":"100","messageId":"101","endLine":4,"endColumn":69},{"ruleId":"98","severity":1,"message":"110","line":8,"column":36,"nodeType":"100","messageId":"101","endLine":8,"endColumn":41},{"ruleId":"98","severity":1,"message":"111","line":8,"column":43,"nodeType":"100","messageId":"101","endLine":8,"endColumn":49},{"ruleId":"98","severity":1,"message":"112","line":8,"column":51,"nodeType":"100","messageId":"101","endLine":8,"endColumn":55},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":27,"column":6,"nodeType":"119","endLine":27,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":5,"nodeType":"123","messageId":"124","endLine":39,"endColumn":6},{"ruleId":"125","severity":1,"message":"126","line":42,"column":25,"nodeType":"127","messageId":"128","endLine":42,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":42,"column":51,"nodeType":"127","messageId":"128","endLine":42,"endColumn":53},{"ruleId":"125","severity":1,"message":"126","line":45,"column":30,"nodeType":"127","messageId":"128","endLine":45,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":45,"column":56,"nodeType":"127","messageId":"128","endLine":45,"endColumn":58},{"ruleId":"117","severity":1,"message":"129","line":55,"column":6,"nodeType":"119","endLine":55,"endColumn":8,"suggestions":"130"},{"ruleId":"117","severity":1,"message":"131","line":59,"column":8,"nodeType":"119","endLine":59,"endColumn":25,"suggestions":"132"},{"ruleId":"98","severity":1,"message":"133","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":19},{"ruleId":"98","severity":1,"message":"134","line":62,"column":12,"nodeType":"100","messageId":"101","endLine":62,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":70,"column":9,"nodeType":"137","endLine":70,"endColumn":85},{"ruleId":"135","severity":1,"message":"136","line":75,"column":36,"nodeType":"137","endLine":75,"endColumn":74},{"ruleId":"98","severity":1,"message":"138","line":90,"column":7,"nodeType":"100","messageId":"101","endLine":90,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":94,"column":1,"nodeType":"141","messageId":"142","endLine":126,"endColumn":11},{"ruleId":"98","severity":1,"message":"143","line":9,"column":7,"nodeType":"100","messageId":"101","endLine":9,"endColumn":12},{"ruleId":"144","severity":1,"message":"145","line":36,"column":70,"nodeType":"146","messageId":"147","endLine":36,"endColumn":77,"fix":"148"},{"ruleId":"117","severity":1,"message":"149","line":56,"column":6,"nodeType":"119","endLine":56,"endColumn":36,"suggestions":"150"},{"ruleId":"98","severity":1,"message":"151","line":110,"column":10,"nodeType":"100","messageId":"101","endLine":110,"endColumn":25},{"ruleId":"117","severity":1,"message":"152","line":116,"column":6,"nodeType":"119","endLine":116,"endColumn":13,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":127,"column":5,"nodeType":"137","endLine":127,"endColumn":46},{"ruleId":"156","severity":1,"message":"157","line":7,"column":69,"nodeType":"158","messageId":"159","endLine":7,"endColumn":71},{"ruleId":"125","severity":1,"message":"126","line":8,"column":41,"nodeType":"127","messageId":"128","endLine":8,"endColumn":43},{"ruleId":"156","severity":1,"message":"160","line":9,"column":75,"nodeType":"158","messageId":"161","endLine":9,"endColumn":77},{"ruleId":"156","severity":1,"message":"157","line":7,"column":69,"nodeType":"158","messageId":"159","endLine":7,"endColumn":71},{"ruleId":"125","severity":1,"message":"126","line":8,"column":41,"nodeType":"127","messageId":"128","endLine":8,"endColumn":43},{"ruleId":"156","severity":1,"message":"160","line":9,"column":75,"nodeType":"158","messageId":"161","endLine":9,"endColumn":77},"no-unused-vars","'Brazil' is defined but never used.","Identifier","unusedVar","'LANorth' is defined but never used.","'LASouth' is defined but never used.","'ME' is defined but never used.","'Mexico' is defined but never used.","'NAEast' is defined but never used.","'NAWest' is defined but never used.","'EUEast' is defined but never used.","'EUWest' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["164"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'removeLabel'. Either include it or remove the dependency array.",["165"],"React Hook useEffect has a missing dependency: 'labelValue'. Either include it or remove the dependency array.",["166"],"'useEffect' is defined but never used.","'countryName' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DropDown' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'fetch' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"167","text":"168"},"React Hook useEffect has missing dependencies: 'firstIndexofPage' and 'lastIndexOfPage'. Either include them or remove the dependency array.",["169"],"'correctPosition' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCompiledDataToBeMerged' and 'user.nickname'. Either include them or remove the dependency array. If 'setCompiledDataToBeMerged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},[1255,1255],"()",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [url]",{"range":"181","text":"182"},"Update the dependencies array to be: [removeLabel]",{"range":"183","text":"184"},"Update the dependencies array to be: [correctPosition, labelValue]",{"range":"185","text":"186"},"Update the dependencies array to be: [FinalLeaderboard, currentPage, firstIndexofPage, lastIndexOfPage]",{"range":"187","text":"188"},"Update the dependencies array to be: [setCompiledDataToBeMerged, user.nickname, value]",{"range":"189","text":"190"},[793,795],"[url]",[1282,1284],"[removeLabel]",[1339,1356],"[correctPosition, labelValue]",[1626,1656],"[FinalLeaderboard, currentPage, firstIndexofPage, lastIndexOfPage]",[3288,3295],"[setCompiledDataToBeMerged, user.nickname, value]"]